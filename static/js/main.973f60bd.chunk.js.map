{"version":3,"sources":["assets/loading.svg","assets/logo.png","components/List.jsx","components/Result.jsx","components/Home.jsx","components/Welcome.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","List","this","props","data","searchValue","lowercasedFilter","searched","toLowerCase","filteredData","length","filter","item","Object","keys","some","key","includes","map","to","pathname","state","candidate","className","id","name","email","number","Component","Result","isLoading","setState","setTimeout","Fragment","location","result","React","handleChange","event","target","value","onSubmit","e","preventDefault","toggleSearch","payload","console","log","onChange","type","placeholder","xmlns","width","height","viewBox","d","src","loading","Welcome","activeClassName","App","useState","setData","useEffect","axios","get","then","res","entry","feed","resData","i","isPassed","content","$t","push","logo","alt","exact","path","component","Home","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.973f60bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.9b554eec.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.3df3de97.png\";","import React, { useEffect, useState, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class List extends Component {\r\n  render() {\r\n    const { data, searchValue, searched } = this.props;\r\n    const lowercasedFilter = searchValue.toLowerCase();\r\n    let filteredData = [];\r\n    if (data.length > 0) {\r\n      filteredData = data.filter(item => {\r\n        return Object.keys(item).some(key => {\r\n          if (key === \"name\" || key === \"email\" || key === \"number\")\r\n            return item[key].toLowerCase().includes(lowercasedFilter);\r\n        });\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {filteredData.length > 0\r\n          ? filteredData.map(item => (\r\n              <Link\r\n                to={{\r\n                  pathname: `/result`,\r\n                  state: { candidate: item }\r\n                }}\r\n              >\r\n                <div className=\"list-item\" key={item.id}>\r\n                  {item.name} {item.email === \"null\" ? \"\" : item.email} -{\" \"}\r\n                  {item.number}\r\n                </div>\r\n              </Link>\r\n            ))\r\n          : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Result extends React.Component {\r\n  state = {\r\n    isLoading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    setTimeout(() => this.setState({ isLoading: false }), 3000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"letter\">\r\n          <div className=\"letter-wrapper\">\r\n            {this.props.location.state.candidate.result && !this.state.isLoading ? (\r\n              <div>\r\n                MẬT THƯ KHẨN\r\n                <br></br>\r\n                Chào bạn,\r\n                <br></br>\r\n                CLB Truyền thông và kỹ năng mềm S4C xin thông báo đến bạn một\r\n                tin vui và một tin buồn.\r\n                <br></br>\r\n                Đầu tiên hãy hít một hơi thật sâu và hét lên thật lớn khi đọc\r\n                tin này:\r\n                <br></br>\r\n                <br></br>\r\n                CHÚC MỪNG BẠN ĐÃ CHÍNH THỨC TRỞ THÀNH MỘT RED MAKER TẠI S4C\r\n                <br></br>\r\n                <br></br> Tiếp đến hãy thở thật đều vì chúng mình sẽ thông báo\r\n                một tin buồn là không có tin vui thứ hai.\r\n                <br></br>\r\n                <br></br>\r\n                Việc bạn chính thức trở thành một Red Maker đồng nghĩa với việc\r\n                bạn sẽ bước vào cuộc hành trình viết nên bản nhạc - Red Song của\r\n                chính mình tại VÒNG TRAINING của S4C. Cuộc phiêu lưu của các bạn\r\n                sẽ bắt đầu:\r\n                <br></br>\r\n                Thời gian: 18h Thứ 3 ngày 17/9\r\n                <br></br>Địa điểm: Phòng 602 Nhà A2\r\n                <br></br>\r\n                <br></br>Một lần nữa xin được chúc mừng bạn và hẹn gặp lại bạn\r\n                vào buổi 1st meeting của chúng mình.\r\n                <br></br>\r\n                <br></br>Thân ái,\r\n                <br></br>S4C\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                MẬT THƯ KHẨN\r\n                <br></br>Chào bạn,\r\n                <br></br>CLB Truyền thông và Kỹ năng mềm S4C xin thông báo với\r\n                bạn một tin quan trọng.\r\n                <br></br>Đầu tiên hãy hít thở thật sâu và bình tĩnh khi đọc\r\n                thông tin này:\r\n                <br></br>\r\n                <br></br>CHÚNG MÌNH RẤT TIẾC BẠN ĐÃ KHÔNG VƯỢT QUA VÒNG PHỎNG\r\n                VẤN CỦA S4C\r\n                <br></br>\r\n                <br></br>Chúng mình biết rằng bạn là một nhân tố rất là tiềm\r\n                năng tuy nhiên có lẽ bạn bạn và mình chưa thật sự có duyên.\r\n                Nhưng chúng mình tin rằng sẽ có nhiều cơ hội khác sẽ mở ra với\r\n                bạn, hãy cố gắng kiếm tiến về phía trước và tìm kiếm những cánh\r\n                cửa khác dành cho mình nhé!\r\n                <br></br>Một lần nữa cảm ơn bạn rất nhiều vì đã dũng cảm ứng\r\n                tuyển cho đợt tuyển thành viên thế hệ thứ 7 của S4C.\r\n                <br></br>Hẹn gặp lại bạn vào một dịp không xa!\r\n                <br></br>\r\n                <br></br>Thân ái,\r\n                <br></br>S4C\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { useEffect, useState, Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport List from \"./List\";\r\nimport loading from \"../assets/loading.svg\";\r\n\r\nclass Result extends React.Component {\r\n  state = {\r\n    searchValue: \"\",\r\n    searched: false,\r\n    isLoading: false\r\n  };\r\n  handleChange = event => {\r\n    this.setState({ searchValue: event.target.value, searched: false });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    this.setState({ searched: true, isLoading: true });\r\n    setTimeout(() => this.setState({ isLoading: false }), 3000);\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleSearch = payload => {\r\n    this.setState({ isLoading: payload });\r\n  };\r\n  render() {\r\n    console.log(this.props.data);\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.onSubmit}>\r\n          <fieldset>\r\n            <legend>𝐅𝐨𝐥𝐥𝐨𝐰 𝐭𝐡𝐞 𝐑𝐄𝐃, 𝐃𝐨 𝐲𝐨𝐮𝐫 𝐁𝐞𝐬𝐭!</legend>\r\n            <div className=\"inner-form\">\r\n              <div className=\"input-field\">\r\n                <div className=\"choices\">\r\n                  <div className=\"choices__inner\">\r\n                    <input\r\n                      value={this.searchValue}\r\n                      onChange={this.handleChange}\r\n                      className=\"form-control choices__input\"\r\n                      id=\"choices-text-preset-values\"\r\n                      type=\"text\"\r\n                      placeholder=\"Nhập tên, số điện thoại hoặc email..\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <button className=\"btn-search\" type=\"submit\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </fieldset>\r\n        </form>\r\n        {this.state.searched &&\r\n        this.state.searchValue.length > 0 &&\r\n        this.props.data &&\r\n        !this.state.isLoading ? (\r\n          <List\r\n            data={this.props.data}\r\n            searchValue={this.state.searchValue}\r\n          ></List>\r\n        ) : this.state.isLoading ? (\r\n          <img src={loading}></img>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { useEffect, useState, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass Welcome extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <legend>Bạn đã sẵn sàng tới với kết quả đợt 2?</legend>\r\n        <NavLink to=\"/search\" activeClassName=\"active\" className=\"register-button\">\r\n          Tới luôn\r\n        </NavLink>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport List from \"./components/List\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Result from \"./components/Result\";\nimport Home from \"./components/Home\";\nimport Welcome from \"./components/Welcome\";\nimport logo from \"./assets/logo.png\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const sheetAPI =\n      \"https://spreadsheets.google.com/feeds/cells/1gyA4Frb9oZVNVc2ZKMCA7Cf-ybHVSicwe8Z8LHTOoCo/od6/public/values?alt=json\";\n    axios.get(sheetAPI).then(res => {\n      let entry = res.data.feed.entry;\n\n      const resData = [];\n\n      for (let i = 5; i <= entry.length - 5; i += 5) {\n        const isPassed = entry[i + 4].content.$t === \"ĐẬU\";\n        resData.push({\n          id: entry[i].content.$t,\n          name: entry[i + 1].content.$t,\n          email: entry[i + 2].content.$t,\n          number: `0${entry[i + 3].content.$t}`,\n          result: isPassed\n        });\n      }\n      setData(resData);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"s004\">\n        <div>\n          <Link to=\"/\" className=\"logo-link\">\n            <img src={logo} alt=\"logo\" className=\"logo\" />\n          </Link>\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route path=\"/search\" component={() => <Home data={data} />} />\n          <Route path=\"/result\" component={Result} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path=\"/\" component={App} />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}